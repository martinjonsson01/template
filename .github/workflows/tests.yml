name: run tests

on:
  workflow_call:
    inputs:
      projects:
        description: 'Stringified JSON object listing test projects to run tests of'
        required: true
        type: string
      test-types:
        description: 'Stringified JSON object listing the types of test projects to run'
        required: true
        type: string
      tests-directory:
        description: 'Where the test projects are located'
        required: false
        default: 'tests'
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        project: ${{ fromJson(inputs.projects) }}
        test-type: ${{ fromJson(inputs.test-types) }}
      fail-fast: false

    steps:
      - name: 🛒 Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

      - name: 🧰 Read Cached NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}

      - name: 🧰 Read cached build
        uses: actions/cache@v3
        with:
          path: ./**
          key: ${{ github.run_id }}-build-cache

      - name: 🧪 Run ${{matrix.project}}.${{matrix.test-type.type}} with code coverage
        run: >
          dotnet test ${{inputs.tests-directory}}/${{matrix.project}}.${{matrix.test-type.type}}
          --no-build
          --verbosity minimal
          --blame-hang
          --blame-hang-timeout 1m
          --blame-hang-dump-type full
          -p:CollectCoverage=true
          -p:Threshold=${{ matrix.test-type.coverageThreshold }}
          -p:ThresholdType=\"line,branch,method\"
          -p:CoverletOutput=../../coverage/lcov.info
          -p:CoverletOutputFormat=lcov
          -p:ExcludeByFile=\"**/Program.cs\"
          -p:ExcludeByAttribute=\"Obsolete,GeneratedCodeAttribute,CompilerGeneratedAttribute,ExcludeFromCodeCoverageAttribute\"
          -p:Include=\"[${{matrix.project}}]*\"

      - name: 📃 Coveralls Parallel
        if: matrix.test-type.coverageThreshold > 0
        uses: coverallsapp/github-action@master
        env:
          NODE_COVERALLS_DEBUG: 1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: run-${{matrix.project}}.${{matrix.test-type.type}}
          parallel: true

  finish:
    name: 🗄 Upload Coveralls data
    runs-on: ubuntu-latest
    needs: [ test ]

    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true
